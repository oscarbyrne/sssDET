- when testing the wrong email address they could do better by testing an email address that's more different. The chances are that every
  time they run this scenario they are testing the same incorrect email address
- similarly, when changing the password they could test a different "new password" every time
- it would be a good idea to test login after failing to change the password. The error message claims that the password was not changed
  but we can't trust it without further testing
- similarly, they don't appear to test that the password was succesfully changed
- copying and pasting is arguably not testing how a real user would interact with the website. It would be worth discussing this with a
  front-end developer
- it is not clear how the test data was generated. There is no guarantee from the video that the passwords are correct. There needs to be
  more testing of the data before it is used as a source of truth. For example - check the happy login flow to confirm that we are correct
  about the current password
- in a similar vein, do we have a guarantee that the same user is not being used simultaneously in a different test? This is particularly important
  when we're changing passwords. At the least we could cause some automated tests to fail without meaning to (meaning extra work to diagnose)
- it would potentially be productive to widen the scope of the test - for example, repeatedly trying to submit the 'bad' password. We could also
  test wider still and try submitting (for example) badly-formed passwords. This is time permitting of course - we can't test everything
- 
